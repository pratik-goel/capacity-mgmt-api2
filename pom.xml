<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.3.1.RELEASE</version>
  </parent>
  <groupId>com.homeretailgroup</groupId>
  <artifactId>capacity-mgmt-api</artifactId>
  <version>0.1.0</version>
  <name>capacity-mgmt</name>
  <properties>
  	<java.version>1.8</java.version>
    <docker.image.prefix>capacity-mgmt-service</docker.image.prefix>
  </properties>
  <repositories>
    <repository>
      <id>libs-milestone-local</id>
      <url>http://repo.spring.io/simple/libs-milestone-local/</url>
    </repository>
  </repositories>
  <dependencies>
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-web</artifactId>
  	</dependency>
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-test</artifactId>
  	</dependency>
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-integration</artifactId>
  		<version>1.2.3.RELEASE</version>
  	</dependency>
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter</artifactId>
  		<version>1.2.3.RELEASE</version>
  	</dependency>
  	<dependency>
  		<groupId>org.springframework.integration</groupId>
  		<artifactId>spring-integration-kafka</artifactId>
  		<version>1.1.1.RELEASE</version>
  	</dependency>
  	<dependency> 
  		<groupId>org.springframework.integration</groupId>
  		<artifactId>spring-integration-java-dsl</artifactId>
  		<version>1.1.0.M1</version>
  	</dependency>
  	<dependency>
  		<groupId>org.springframework.data</groupId>
  		<artifactId>spring-data-mongodb</artifactId>
  	</dependency>
  	<dependency>
		<groupId>com.fasterxml.jackson.dataformat</groupId>
		<artifactId>jackson-dataformat-xml</artifactId>
	</dependency>
	<dependency>
		<groupId>org.apache.kafka</groupId>
		<artifactId>kafka_2.10</artifactId>
		<version>0.8.1.1</version>
		<scope>compile</scope>
		<exclusions>
			<exclusion>
				<artifactId>jmxri</artifactId>
				<groupId>com.sun.jmx</groupId>
			</exclusion>
			<exclusion>
				<artifactId>jms</artifactId>
				<groupId>javax.jms</groupId>
			</exclusion>
			<exclusion>
				<artifactId>jmxtools</artifactId>
				<groupId>com.sun.jdmk</groupId>
			</exclusion>

			<exclusion>
				<artifactId>slf4j-log4j12</artifactId>
				<groupId>org.slf4j</groupId>
			</exclusion>
		</exclusions>
	</dependency>
	
  </dependencies>
   
  <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.13.7</version>
                <configuration>
                	<dockerHost>tcp://192.168.99.100:2376</dockerHost>
                	<certPath>C:/Users/pratik.goel/.docker/machine/certs</certPath>
                	<images>
                		<image>
                			<name>${docker.image.prefix}/mongo</name>
                			<alias>${docker.image.prefix}-mongo</alias>
                			<build>
                				<assembly>
                					<mode>dir</mode>
                					<basedir>/docker</basedir>
                					<dockerFileDir>${project.basedir}/target/docker/${docker.image.prefix}/mongo/build/maven/docker</dockerFileDir>
                					<inline>
                						<fileSets>
										    <fileSet>
										      <directory>${project.basedir}/src/main/docker/storage</directory>
										      <outputDirectory>/docker</outputDirectory>
										      <filtered>true</filtered>
										      <includes>
										        <include>Dockerfile</include>
										      </includes>
										      <fileMode>755</fileMode>
										    </fileSet>
										  </fileSets>
                					</inline>
                				</assembly>
                			</build>
                			<run>
                				<namingStrategy>alias</namingStrategy>
                				<volumes>
								  <bind>
								    <volume>/var/lib/boot2docker/my-mongodb-data/:/data/db</volume>
								  </bind>
								</volumes>
                			</run>
                		</image>
                		<image>
                			<name>${docker.image.prefix}/${project.artifactId}</name>
                			<alias>${docker.image.prefix}-java</alias>
                			<build>
                				<assembly>
                					<mode>dir</mode>
                					<basedir>/docker</basedir>
                					<dockerFileDir>${project.basedir}/target/docker/${docker.image.prefix}/${project.artifactId}/build/maven/docker</dockerFileDir>
                					<inline>
                						<fileSets>
										    <fileSet>
										      <directory>${project.basedir}/target</directory>
										      <outputDirectory>/docker</outputDirectory>
										      <filtered>true</filtered>
										      <includes>
										        <include>${project.build.finalName}.jar</include>
										      </includes>
										      <fileMode>755</fileMode>
										    </fileSet>
										    <fileSet>
										      <directory>${project.basedir}/src/main/docker/java</directory>
										      <outputDirectory>/docker</outputDirectory>
										      <filtered>true</filtered>
										      <includes>
										        <include>Dockerfile</include>
										      </includes>
										      <fileMode>755</fileMode>
										    </fileSet>
										  </fileSets>
                					</inline>
                				</assembly>
                			</build>
                			<run>
                				<namingStrategy>alias</namingStrategy>
                				<links>
								  <link>${docker.image.prefix}-mongo:mongodblink</link>
								</links>
                				<ports>
                					<port>8080:8080</port>
                					<port>8000:8000</port>
                				</ports>
                			</run>
                		</image>
                	</images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>